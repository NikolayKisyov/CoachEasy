@model CoachEasy.Web.ViewModels.Coaches.CoachViewModel
@using CoachEasy.Common
@{
    this.ViewData["Title"] = Model.Name + " Profile";
}
<hr />
<div class="row">
    <img src="@Model.PictureUrl" class="img-workoutlist image-widthsize" alt="Alternate Text" />
    <div class="col">
        <ul class="list-group mr-lg-5 font-weight-bold">
            <li class="list-group-item orangebackground"><h4>@Model.Name</h4></li>
            <li class="list-group-item">Experience: @Model.Experience years</li>
            <li class="list-group-item">Phone: +@Model.Phone</li>
            <li class="list-group-item">Email: @Model.Email</li>
            <li class="list-group-item">Workouts added: @Model.CoachWorkoutsCount</li>
            <li class="list-group-item">Courses added: @Model.CoursesCount</li>
            <li class="list-group-item">Description:<br> @Model.Description</li>
        </ul>
    </div>
    <div>
        @if (this.User.Identity.IsAuthenticated)
        {
            <ul class="item-rating">
                <h4>Rate this coach:</h4>
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= Model.AverageVote)
                    {
                        <li class="star-fill" data-vote="@i"><i class="fas fa-star"></i></li>
                    }
                    else
                    {
                        <li class="star-empty" data-vote="@i"><i class="fas fa-star"></i></li>
                    }
                }
                <li><span id="averageVoteValue">@Model.AverageVote.ToString("0.0")</span><span> / 5</span> </li>
            </ul>
        }
    </div>
</div>

<hr />
<form method="post" id="antiForgeryForm"></form>
@section Scripts{
    <script>
        $("li[data-vote]").each(function (el) {
            $(this).click(function () {
                var value = $(this).attr("data-vote");
                var coachId = "@Model.Id";
                var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                var data = { coachId: coachId, value: parseInt(value) };
                $.ajax({
                    type: "POST",
                    url: "/api/Votes",
                    data: JSON.stringify(data),
                    headers: {
                        'X-CSRF-TOKEN': antiForgeryToken
                    },
                    success: function (data) {
                        $('#averageVoteValue').html(data.averageVote.toFixed(1));

                        var stars = Array.from($(".fa-star"));
                        for (var i = 0; i < stars.length; i++) {

                            if (i < Math.floor(data.averageVote)) {
                                stars[i].parentNode.classList.remove('star-empty');
                                stars[i].parentNode.classList.add('star-fill');
                            } else {
                                stars[i].parentNode.classList.remove('star-fill');
                                stars[i].parentNode.classList.add('star-empty');
                            }
                        }
                    },
                    contentType: 'application/json',
                });
            })
        });
    </script>
}
